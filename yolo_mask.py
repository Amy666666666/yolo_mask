# -*- coding: utf-8 -*-
"""20200826_yolo_mask.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1voq9JYaKbUgJ0-NrYEx2PUmXurLMD-K6
"""

! nvidia-smi

! git clone https://github.com/pjreddie/darknet.git

! cd darknet; head Makefile

!sed -i "s/GPU=0/GPU=1/g" darknet/Makefile
!sed -i "s/CUDNN=0/CUDNN=1/g" darknet/Makefile
!sed -i "s/OPENCV=0/OPENCV=1/g" darknet/Makefile

! head darknet/Makefile

! cd darknet; make

from google.colab import drive
drive.mount('/content/drive')

! cp "/content/drive/My Drive/AIDataset/medical-masks-dataset.zip" /content/

! unzip /content/medical-masks-dataset.zip > data_unzip.log

from PIL import Image
img = Image.open('/content/images/012106.jpg_1140x855.jpg')
img

! cat /content/labels/012106.jpg_1140x855.xml

from PIL import Image
img = Image.open('/content/images/0602623232127-web-tete.jpg')
img

! cat /content/labels/0602623232127-web-tete.jpg_1140x855.xml

! cat /content/labels/012106.jpg_1140x855.xml

! rm -rf /content/yolo
! mkdir /content/yolo

from bs4 import BeautifulSoup
import os
import shutil

status_dic = {'good': 2, 'bad': 1, 'none': 0}
def getYoloFormat(filename,label_path, img_path, yolo_path, newname):
  with open(label_path+ filename, 'r') as f:
    soup = BeautifulSoup(f.read(), 'xml')
    imgname = soup.select_one('filename').text
    image_w = int(soup.select_one('width').text)
    image_h = int(soup.select_one('height').text)
    ary = []
    for obj in soup.select('object'):
      xmin = int(obj.select_one('xmin').text)
      xmax = int(obj.select_one('xmax').text)
      ymin = int(obj.select_one('ymin').text)
      ymax = int(obj.select_one('ymax').text)
      objclass = status_dic.get(obj.select_one('name').text)

      x = (xmin + (xmax-xmin)/2) * 1.0 / image_w
      y = (ymin + (ymax-ymin)/2) * 1.0 / image_h
      w = (xmax-xmin) * 1.0 / image_w
      h = (ymax-ymin)* 1.0 / image_h
      ary.append(' '.join([str(objclass), str(x),str(y),str(w),str(h)]))
    if os.path.exists(img_path + imgname):
      shutil.copyfile(img_path + imgname, yolo_path + newname +'.jpg')
      with open(yolo_path + newname +'.txt','w') as f:
        f.write('\n'.join(ary))

import os
labelpath ='/content/labels/'
imgpath ='/content/images/'
yolopath = '/content/yolo/'
ary = []
for idx, f in enumerate(os.listdir(labelpath)):
  try:
    getYoloFormat(f, labelpath,imgpath, yolopath, str(idx))
  except Exception as e:
    print(e)

from PIL import Image
Image.open('/content/yolo/0.jpg')

! cat /content/yolo/0.txt

! rm -rf /content/cfg_mask
! mkdir /content/cfg_mask



import os 
datasets = ['/content/yolo/' + f for f in os.listdir('/content/yolo/') if not f.endswith('.txt')]
len(datasets) * 0.8

with open('/content/cfg_mask/train.txt', 'w') as f:
  f.write('\n'.join(datasets[0:540]))

with open('/content/cfg_mask/test.txt', 'w') as f:
  f.write('\n'.join(datasets[540:]))

! cp "/content/drive/My Drive/AIDataset/obj.data" cfg_mask/
! cp "/content/drive/My Drive/AIDataset/obj.names" cfg_mask/

! head /content/cfg_mask/obj.data

! head /content/cfg_mask/obj.names

! mkdir /content/cfg_mask/weights

! cp /content/darknet/cfg/yolov3-tiny.cfg /content/cfg_mask/

! sed -n -e 127p -e 135p -e 171p -e 177p /content/cfg_mask/yolov3-tiny.cfg

! sed -i '127s/255/24/' /content/cfg_mask/yolov3-tiny.cfg
! sed -i '135s/80/3/' /content/cfg_mask/yolov3-tiny.cfg
! sed -i '171s/255/24/' /content/cfg_mask/yolov3-tiny.cfg
! sed -i '177s/80/3/' /content/cfg_mask/yolov3-tiny.cfg

! sed -n -e 127p -e 135p -e 171p -e 177p /content/cfg_mask/yolov3-tiny.cfg

#!wget https://pjreddie.com/media/files/darknet53.conv.74
! cp "/content/drive/My Drive/AIDataset/darknet53.conv.74" /content/cfg_mask/

! darknet/darknet detector train /content/cfg_mask/obj.data /content/cfg_mask/yolov3-tiny.cfg /content/cfg_mask/darknet53.conv.74

from PIL import Image
Image.open('yolo/605.jpg')

! cd darknet; ./darknet detector test /content/cfg_mask/obj.data /content/cfg_mask/yolov3-tiny.cfg /content/cfg_mask/weights/yolov3-tiny_90000.weights /content/yolo/605.jpg

from PIL import Image
Image.open('/content/darknet/predictions.jpg')

!cp "/content/drive/My Drive/AIDataset/test.jpg"  /content/

from PIL import Image
Image.open('/content/test.jpg')

! cd darknet; ./darknet detector test /content/cfg_mask/obj.data /content/cfg_mask/yolov3-tiny.cfg /content/cfg_mask/weights/yolov3-tiny_90000.weights /content/test.jpg

from PIL import Image
Image.open('/content/darknet/predictions.jpg')

